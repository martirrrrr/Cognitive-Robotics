from naoqi import ALProxy
import time

# Configurazione del robot
ROBOT_IP = "192.168.1.104"  # Indirizzo IP del robot o del simulatore
ROBOT_PORT = 9559      # Porta configurata per la comunicazione

# Creazione delle proxy
motion_proxy = ALProxy("ALMotion", ROBOT_IP, ROBOT_PORT)
posture_proxy = ALProxy("ALRobotPosture", ROBOT_IP, ROBOT_PORT)
leds_proxy = ALProxy("ALLeds", ROBOT_IP, ROBOT_PORT)
tablet_proxy = ALProxy("ALDialog", ROBOT_IP, ROBOT_PORT)

# Funzione per animazione LED (opzionale)
def blink_eyes():
    leds_proxy.fadeRGB("FaceLeds", 0xFFFFFF, 0.5)  # Bianco
    time.sleep(0.2)
    leds_proxy.fadeRGB("FaceLeds", 0x000000, 0.5)  # Nero (spento)
    time.sleep(0.2)
    leds_proxy.fadeRGB("FaceLeds", 0xFFFFFF, 0.5)  # Bianco
    time.sleep(0.2)

# Funzione per mostrare una faccia sorridente sul tablet
def show_smile():
    # Abilita il tablet
    tablet_proxy.showWebview("http://198.51.100.1/smile.png")  # URL di esempio per un'immagine
    time.sleep(1)  # Lascia il tempo di caricare l'immagine

# Funzione per gesti simpatici
def funny_gestures():
    # Riattiva il robot e impostalo in posizione iniziale
    motion_proxy.wakeUp()
    posture_proxy.goToPosture("StandInit", 1.0)
    
    # Mostra la faccia sorridente
    show_smile()
    
    # Primo gesto: braccia aperte e risatina
    names = ["LShoulderPitch", "LShoulderRoll", "LElbowYaw", "LElbowRoll", "LWristYaw",
             "RShoulderPitch", "RShoulderRoll", "RElbowYaw", "RElbowRoll", "RWristYaw"]
    angles = [1.5, 0.5, -1.0, -0.5, 0.3,  # Braccio sinistro
              1.5, -0.5, 1.0, 0.5, -0.3]  # Braccio destro
    times = [1.0] * len(names)
    motion_proxy.angleInterpolation(names, angles, times, True)
    
    # Risata simulata: inclinazione testa
    for i in range(2):
        motion_proxy.setAngles("HeadYaw", 0.3 if i % 2 == 0 else -0.3, 0.2)  # Destra e sinistra
        motion_proxy.setAngles("HeadPitch", -0.2, 0.2)  # In avanti
        time.sleep(0.5)
    motion_proxy.setAngles("HeadYaw", 0.0, 0.2)  # Reset
    
    # Secondo gesto: mani sul cuore e inclinazione della testa
    names = ["LShoulderPitch", "LElbowRoll", "RShoulderPitch", "RElbowRoll"]
    angles = [1.0, -1.2, 1.0, 1.2]  # Mani vicine al cuore
    times = [1.0] * len(names)
    motion_proxy.angleInterpolation(names, angles, times, True)
    motion_proxy.setAngles("HeadPitch", 0.3, 0.2)  # Testa inclinata
    
    time.sleep(2)  # Pausa per effetto comico
    
    # Terzo gesto: scrollata di spalle
    names = ["LShoulderRoll", "RShoulderRoll"]
    angles = [0.8, -0.8]  # Scrollata
    motion_proxy.angleInterpolation(names, angles, [0.5, 0.5], True)
    motion_proxy.angleInterpolation(names, [0.0, 0.0], [0.5, 0.5], True)
    
    # Blink degli occhi (opzionale)
    blink_eyes()

    # Ritorna alla posizione iniziale
    posture_proxy.goToPosture("StandInit", 1.0)
    # motion_proxy.rest()

